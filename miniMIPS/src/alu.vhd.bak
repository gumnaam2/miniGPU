library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity alu is
	port(
	clock:in std_logic;
	reset:in std_logic;
	enable:in std_logic;
	operand_1:in std_logic_vector(7 downto 0);
	operand_2:in std_logic_vector (7 downto 0);alu_select:in std_logic_vector (1 downto 0);
	core_state:in std_logic_vector(2 downto 0);
	alu_out: out std_logic_vector(7 downto 0);
	alu_nzp: out std_logic_vector(2 downto 0)
	);
end alu;

architecture behavioural of alu is

begin
	process(clock)
	begin
		if reset = '1' then
			alu_out <= (others => '0');
			alu_nzp <= (others => '0');
		elsif enable = '1' then
			alu_nzp(0) <= (rs - rt < 0);
			alu_nzp(1) <= (rs - rt = 0);
			alu_nzp(2) <= (rs - rt > 0);
			if alu_select = "00" then
				alu_out <= rs + rt;
			elsif alu_select = "00" then
				alu_out <= rs - rt;
			elsif alu_select = "00" then
				alu_out <= rs * rt;
			elsif alu_select = "00" then
				alu_out <= rs / rt;
			end if;
		end if;
	end process;
end behavioural;